// Generated from grammars/Rust2.g4 by ANTLR 4.9.0-SNAPSHOT

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";

export class Rust2Lexer extends Lexer {
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly T__4 = 5;
  public static readonly T__5 = 6;
  public static readonly T__6 = 7;
  public static readonly T__7 = 8;
  public static readonly T__8 = 9;
  public static readonly T__9 = 10;
  public static readonly T__10 = 11;
  public static readonly T__11 = 12;
  public static readonly T__12 = 13;
  public static readonly T__13 = 14;
  public static readonly T__14 = 15;
  public static readonly T__15 = 16;
  public static readonly T__16 = 17;
  public static readonly T__17 = 18;
  public static readonly T__18 = 19;
  public static readonly T__19 = 20;
  public static readonly T__20 = 21;
  public static readonly T__21 = 22;
  public static readonly T__22 = 23;
  public static readonly T__23 = 24;
  public static readonly T__24 = 25;
  public static readonly T__25 = 26;
  public static readonly T__26 = 27;
  public static readonly T__27 = 28;
  public static readonly T__28 = 29;
  public static readonly T__29 = 30;
  public static readonly T__30 = 31;
  public static readonly T__31 = 32;
  public static readonly T__32 = 33;
  public static readonly T__33 = 34;
  public static readonly T__34 = 35;
  public static readonly T__35 = 36;
  public static readonly T__36 = 37;
  public static readonly T__37 = 38;
  public static readonly T__38 = 39;
  public static readonly T__39 = 40;
  public static readonly T__40 = 41;
  public static readonly T__41 = 42;
  public static readonly T__42 = 43;
  public static readonly STRING = 44;
  public static readonly JUNK = 45;
  public static readonly NUMBER = 46;
  public static readonly IDENTIFIER = 47;

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "T__0",
    "T__1",
    "T__2",
    "T__3",
    "T__4",
    "T__5",
    "T__6",
    "T__7",
    "T__8",
    "T__9",
    "T__10",
    "T__11",
    "T__12",
    "T__13",
    "T__14",
    "T__15",
    "T__16",
    "T__17",
    "T__18",
    "T__19",
    "T__20",
    "T__21",
    "T__22",
    "T__23",
    "T__24",
    "T__25",
    "T__26",
    "T__27",
    "T__28",
    "T__29",
    "T__30",
    "T__31",
    "T__32",
    "T__33",
    "T__34",
    "T__35",
    "T__36",
    "T__37",
    "T__38",
    "T__39",
    "T__40",
    "T__41",
    "T__42",
    "STRING",
    "ESC",
    "JUNK",
    "NUMBER",
    "IDENTIFIER",
    "LETTER",
    "DIGIT",
  ];

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "';'",
    "'const'",
    "':'",
    "'='",
    "'let'",
    "'mut'",
    "'fn'",
    "'->'",
    "'return'",
    "'&'",
    "'&mut'",
    "'*'",
    "'||'",
    "'|'",
    "'('",
    "')'",
    "'if'",
    "'else'",
    "'()'",
    "','",
    "'{'",
    "'}'",
    "'+'",
    "'-'",
    "'/'",
    "'%'",
    "'=='",
    "'!='",
    "'<'",
    "'>'",
    "'<='",
    "'>='",
    "'!'",
    "'&&'",
    "'.'",
    "'true'",
    "'false'",
    "'i32'",
    "'f32'",
    "'bool'",
    "'str'",
    "'Mutex<'",
    "'println!'",
  ];
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    "STRING",
    "JUNK",
    "NUMBER",
    "IDENTIFIER",
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    Rust2Lexer._LITERAL_NAMES,
    Rust2Lexer._SYMBOLIC_NAMES,
    [],
  );

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return Rust2Lexer.VOCABULARY;
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(Rust2Lexer._ATN, this);
  }

  // @Override
  public get grammarFileName(): string {
    return "Rust2.g4";
  }

  // @Override
  public get ruleNames(): string[] {
    return Rust2Lexer.ruleNames;
  }

  // @Override
  public get serializedATN(): string {
    return Rust2Lexer._serializedATN;
  }

  // @Override
  public get channelNames(): string[] {
    return Rust2Lexer.channelNames;
  }

  // @Override
  public get modeNames(): string[] {
    return Rust2Lexer.modeNames;
  }

  public static readonly _serializedATN: string =
    "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x021\u011F\b\x01" +
    "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
    "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
    "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
    "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
    "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    "+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x03" +
    "\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
    "\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
    "\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
    "\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
    "\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03" +
    "\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
    "\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03" +
    "\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03" +
    "\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
    ' \x03 \x03 \x03!\x03!\x03!\x03"\x03"\x03#\x03#\x03#\x03$\x03$\x03%\x03' +
    "%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03'\x03'\x03'\x03'" +
    "\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03" +
    "+\x03+\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x03" +
    ",\x03,\x03-\x03-\x03-\x07-\xFA\n-\f-\x0E-\xFD\v-\x03-\x03-\x03.\x03.\x03" +
    ".\x03.\x05.\u0105\n.\x03/\x06/\u0108\n/\r/\x0E/\u0109\x03/\x03/\x030\x06" +
    "0\u010F\n0\r0\x0E0\u0110\x031\x031\x031\x031\x071\u0117\n1\f1\x0E1\u011A" +
    "\v1\x032\x032\x033\x033\x03\xFB\x02\x024\x03\x02\x03\x05\x02\x04\x07\x02" +
    "\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
    "\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
    "#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
    '\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02"C' +
    "\x02#E\x02$G\x02%I\x02&K\x02'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02" +
    ".[\x02\x02]\x02/_\x020a\x021c\x02\x02e\x02\x02\x03\x02\x05\x05\x02\v\f" +
    '\x0F\x0F""\x04\x02C\\c|\x03\x022;\x02\u0123\x02\x03\x03\x02\x02\x02' +
    "\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02" +
    "\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02" +
    "\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02" +
    "\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02" +
    "\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02" +
    "#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02)\x03" +
    "\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02" +
    "\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02" +
    "7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02" +
    "\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02" +
    "\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03" +
    "\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02" +
    "\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02" +
    "Y\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02" +
    "\x02\x02\x03g\x03\x02\x02\x02\x05i\x03\x02\x02\x02\x07o\x03\x02\x02\x02" +
    "\tq\x03\x02\x02\x02\vs\x03\x02\x02\x02\rw\x03\x02\x02\x02\x0F{\x03\x02" +
    "\x02\x02\x11~\x03\x02\x02\x02\x13\x81\x03\x02\x02\x02\x15\x88\x03\x02" +
    "\x02\x02\x17\x8A\x03\x02\x02\x02\x19\x8F\x03\x02\x02\x02\x1B\x91\x03\x02" +
    "\x02\x02\x1D\x94\x03\x02\x02\x02\x1F\x96\x03\x02\x02\x02!\x98\x03\x02" +
    "\x02\x02#\x9A\x03\x02\x02\x02%\x9D\x03\x02\x02\x02'\xA2\x03\x02\x02\x02" +
    ")\xA5\x03\x02\x02\x02+\xA7\x03\x02\x02\x02-\xA9\x03\x02\x02\x02/\xAB\x03" +
    "\x02\x02\x021\xAD\x03\x02\x02\x023\xAF\x03\x02\x02\x025\xB1\x03\x02\x02" +
    "\x027\xB3\x03\x02\x02\x029\xB6\x03\x02\x02\x02;\xB9\x03\x02\x02\x02=\xBB" +
    "\x03\x02\x02\x02?\xBD\x03\x02\x02\x02A\xC0\x03\x02\x02\x02C\xC3\x03\x02" +
    "\x02\x02E\xC5\x03\x02\x02\x02G\xC8\x03\x02\x02\x02I\xCA\x03\x02\x02\x02" +
    "K\xCF\x03\x02\x02\x02M\xD5\x03\x02\x02\x02O\xD9\x03\x02\x02\x02Q\xDD\x03" +
    "\x02\x02\x02S\xE2\x03\x02\x02\x02U\xE6\x03\x02\x02\x02W\xED\x03\x02\x02" +
    "\x02Y\xF6\x03\x02\x02\x02[\u0104\x03\x02\x02\x02]\u0107\x03\x02\x02\x02" +
    "_\u010E\x03\x02\x02\x02a\u0112\x03\x02\x02\x02c\u011B\x03\x02\x02\x02" +
    "e\u011D\x03\x02\x02\x02gh\x07=\x02\x02h\x04\x03\x02\x02\x02ij\x07e\x02" +
    "\x02jk\x07q\x02\x02kl\x07p\x02\x02lm\x07u\x02\x02mn\x07v\x02\x02n\x06" +
    "\x03\x02\x02\x02op\x07<\x02\x02p\b\x03\x02\x02\x02qr\x07?\x02\x02r\n\x03" +
    "\x02\x02\x02st\x07n\x02\x02tu\x07g\x02\x02uv\x07v\x02\x02v\f\x03\x02\x02" +
    "\x02wx\x07o\x02\x02xy\x07w\x02\x02yz\x07v\x02\x02z\x0E\x03\x02\x02\x02" +
    "{|\x07h\x02\x02|}\x07p\x02\x02}\x10\x03\x02\x02\x02~\x7F\x07/\x02\x02" +
    "\x7F\x80\x07@\x02\x02\x80\x12\x03\x02\x02\x02\x81\x82\x07t\x02\x02\x82" +
    "\x83\x07g\x02\x02\x83\x84\x07v\x02\x02\x84\x85\x07w\x02\x02\x85\x86\x07" +
    "t\x02\x02\x86\x87\x07p\x02\x02\x87\x14\x03\x02\x02\x02\x88\x89\x07(\x02" +
    "\x02\x89\x16\x03\x02\x02\x02\x8A\x8B\x07(\x02\x02\x8B\x8C\x07o\x02\x02" +
    "\x8C\x8D\x07w\x02\x02\x8D\x8E\x07v\x02\x02\x8E\x18\x03\x02\x02\x02\x8F" +
    "\x90\x07,\x02\x02\x90\x1A\x03\x02\x02\x02\x91\x92\x07~\x02\x02\x92\x93" +
    "\x07~\x02\x02\x93\x1C\x03\x02\x02\x02\x94\x95\x07~\x02\x02\x95\x1E\x03" +
    "\x02\x02\x02\x96\x97\x07*\x02\x02\x97 \x03\x02\x02\x02\x98\x99\x07+\x02" +
    '\x02\x99"\x03\x02\x02\x02\x9A\x9B\x07k\x02\x02\x9B\x9C\x07h\x02\x02\x9C' +
    "$\x03\x02\x02\x02\x9D\x9E\x07g\x02\x02\x9E\x9F\x07n\x02\x02\x9F\xA0\x07" +
    "u\x02\x02\xA0\xA1\x07g\x02\x02\xA1&\x03\x02\x02\x02\xA2\xA3\x07*\x02\x02" +
    "\xA3\xA4\x07+\x02\x02\xA4(\x03\x02\x02\x02\xA5\xA6\x07.\x02\x02\xA6*\x03" +
    "\x02\x02\x02\xA7\xA8\x07}\x02\x02\xA8,\x03\x02\x02\x02\xA9\xAA\x07\x7F" +
    "\x02\x02\xAA.\x03\x02\x02\x02\xAB\xAC\x07-\x02\x02\xAC0\x03\x02\x02\x02" +
    "\xAD\xAE\x07/\x02\x02\xAE2\x03\x02\x02\x02\xAF\xB0\x071\x02\x02\xB04\x03" +
    "\x02\x02\x02\xB1\xB2\x07'\x02\x02\xB26\x03\x02\x02\x02\xB3\xB4\x07?\x02" +
    "\x02\xB4\xB5\x07?\x02\x02\xB58\x03\x02\x02\x02\xB6\xB7\x07#\x02\x02\xB7" +
    "\xB8\x07?\x02\x02\xB8:\x03\x02\x02\x02\xB9\xBA\x07>\x02\x02\xBA<\x03\x02" +
    "\x02\x02\xBB\xBC\x07@\x02\x02\xBC>\x03\x02\x02\x02\xBD\xBE\x07>\x02\x02" +
    "\xBE\xBF\x07?\x02\x02\xBF@\x03\x02\x02\x02\xC0\xC1\x07@\x02\x02\xC1\xC2" +
    "\x07?\x02\x02\xC2B\x03\x02\x02\x02\xC3\xC4\x07#\x02\x02\xC4D\x03\x02\x02" +
    "\x02\xC5\xC6\x07(\x02\x02\xC6\xC7\x07(\x02\x02\xC7F\x03\x02\x02\x02\xC8" +
    "\xC9\x070\x02\x02\xC9H\x03\x02\x02\x02\xCA\xCB\x07v\x02\x02\xCB\xCC\x07" +
    "t\x02\x02\xCC\xCD\x07w\x02\x02\xCD\xCE\x07g\x02\x02\xCEJ\x03\x02\x02\x02" +
    "\xCF\xD0\x07h\x02\x02\xD0\xD1\x07c\x02\x02\xD1\xD2\x07n\x02\x02\xD2\xD3" +
    "\x07u\x02\x02\xD3\xD4\x07g\x02\x02\xD4L\x03\x02\x02\x02\xD5\xD6\x07k\x02" +
    "\x02\xD6\xD7\x075\x02\x02\xD7\xD8\x074\x02\x02\xD8N\x03\x02\x02\x02\xD9" +
    "\xDA\x07h\x02\x02\xDA\xDB\x075\x02\x02\xDB\xDC\x074\x02\x02\xDCP\x03\x02" +
    "\x02\x02\xDD\xDE\x07d\x02\x02\xDE\xDF\x07q\x02\x02\xDF\xE0\x07q\x02\x02" +
    "\xE0\xE1\x07n\x02\x02\xE1R\x03\x02\x02\x02\xE2\xE3\x07u\x02\x02\xE3\xE4" +
    "\x07v\x02\x02\xE4\xE5\x07t\x02\x02\xE5T\x03\x02\x02\x02\xE6\xE7\x07O\x02" +
    "\x02\xE7\xE8\x07w\x02\x02\xE8\xE9\x07v\x02\x02\xE9\xEA\x07g\x02\x02\xEA" +
    "\xEB\x07z\x02\x02\xEB\xEC\x07>\x02\x02\xECV\x03\x02\x02\x02\xED\xEE\x07" +
    "r\x02\x02\xEE\xEF\x07t\x02\x02\xEF\xF0\x07k\x02\x02\xF0\xF1\x07p\x02\x02" +
    "\xF1\xF2\x07v\x02\x02\xF2\xF3\x07n\x02\x02\xF3\xF4\x07p\x02\x02\xF4\xF5" +
    "\x07#\x02\x02\xF5X\x03\x02\x02\x02\xF6\xFB\x07$\x02\x02\xF7\xFA\x05[." +
    "\x02\xF8\xFA\v\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xF8\x03\x02\x02" +
    "\x02\xFA\xFD\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFB\xF9\x03\x02\x02" +
    "\x02\xFC\xFE\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFE\xFF\x07$\x02" +
    "\x02\xFFZ\x03\x02\x02\x02\u0100\u0101\x07^\x02\x02\u0101\u0105\x07$\x02" +
    "\x02\u0102\u0103\x07^\x02\x02\u0103\u0105\x07^\x02\x02\u0104\u0100\x03" +
    "\x02\x02\x02\u0104\u0102\x03\x02\x02\x02\u0105\\\x03\x02\x02\x02\u0106" +
    "\u0108\t\x02\x02\x02\u0107\u0106\x03\x02\x02\x02\u0108\u0109\x03\x02\x02" +
    "\x02\u0109\u0107\x03\x02\x02\x02\u0109\u010A\x03\x02\x02\x02\u010A\u010B" +
    "\x03\x02\x02\x02\u010B\u010C\b/\x02\x02\u010C^\x03\x02\x02\x02\u010D\u010F" +
    "\x05e3\x02\u010E\u010D\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02\u0110" +
    "\u010E\x03\x02\x02\x02\u0110\u0111\x03\x02\x02\x02\u0111`\x03\x02\x02" +
    "\x02\u0112\u0118\x05c2\x02\u0113\u0117\x05c2\x02\u0114\u0117\x05e3\x02" +
    "\u0115\u0117\x07a\x02\x02\u0116\u0113\x03\x02\x02\x02\u0116\u0114\x03" +
    "\x02\x02\x02\u0116\u0115\x03\x02\x02\x02\u0117\u011A\x03\x02\x02\x02\u0118" +
    "\u0116\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119b\x03\x02\x02" +
    "\x02\u011A\u0118\x03\x02\x02\x02\u011B\u011C\t\x03\x02\x02\u011Cd\x03" +
    "\x02\x02\x02\u011D\u011E\t\x04\x02\x02\u011Ef\x03\x02\x02\x02\n\x02\xF9" +
    "\xFB\u0104\u0109\u0110\u0116\u0118\x03\b\x02\x02";
  public static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!Rust2Lexer.__ATN) {
      Rust2Lexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(Rust2Lexer._serializedATN),
      );
    }

    return Rust2Lexer.__ATN;
  }
}
